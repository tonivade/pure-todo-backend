plugins {
  id 'java-library'
  id 'application'
  id 'de.undercouch.download' version '5.3.0'
  id 'org.mikeneck.graalvm-native-image' version '1.4.1'
  id 'com.github.ben-manes.versions' version '0.43.0'
}

archivesBaseName = 'todo-backend'
version = '0.1.0-SNAPSHOT'

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url = 'https://oss.sonatype.org/content/repositories/snapshots'
  }
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(19)
  }
}

test {
  useJUnitPlatform()
  
  jvmArgs(['--enable-preview'])
}

javadoc.options {
  addStringOption('-release', '19')
}

compileJava {
  options.compilerArgs << '-Xlint:unchecked'
  options.compilerArgs << '-Xlint:rawtypes'
  options.compilerArgs << '--enable-preview'
  options.release = 19
}

compileTestJava {
  options.compilerArgs << '-Xlint:unchecked'
  options.compilerArgs << '-Xlint:rawtypes'
  options.compilerArgs << '--enable-preview'
  options.release = 19
}

dependencies {
  annotationProcessor 'com.github.tonivade:purejson:0.4-SNAPSHOT'
  implementation 'com.github.tonivade:purefun-monad:4.1-SNAPSHOT'
  implementation 'com.github.tonivade:purefun-effect:4.1-SNAPSHOT'
  implementation 'com.github.tonivade:purefun-transformer:4.1-SNAPSHOT'
  runtimeOnly 'com.github.tonivade:purefun-instances:4.1-SNAPSHOT'
  implementation 'com.github.tonivade:zeromock-server:0.17.0-SNAPSHOT'
  implementation 'com.github.tonivade:puredbc:0.5-SNAPSHOT'
  implementation 'com.github.tonivade:purecfg:0.5-SNAPSHOT'
  implementation 'com.github.tonivade:purejson:0.4-SNAPSHOT'
  implementation 'com.zaxxer:HikariCP:5.0.1'
  runtimeOnly 'com.h2database:h2:2.1.214'
  runtimeOnly 'ch.qos.logback:logback-classic:1.2.11'
  testImplementation 'com.github.tonivade:zeromock-junit5:0.17.0-SNAPSHOT'
  testImplementation 'com.github.tonivade:zeromock-client:0.17.0-SNAPSHOT'
  testImplementation 'com.github.tonivade:purecheck:0.4-SNAPSHOT'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
  testRuntimeOnly 'org.junit.platform:junit-platform-runner:1.9.1'
  testImplementation 'org.mockito:mockito-core:4.8.1'
  testImplementation 'org.mockito:mockito-junit-jupiter:4.8.1'
  testImplementation 'org.assertj:assertj-core:3.23.1'
}

application {
  mainClass = 'com.github.tonivade.todo.Application'
  applicationDefaultJvmArgs << '--enable-preview'
}

task fatJar(type: Jar) {
  manifest {
    attributes "Main-Class": "com.github.tonivade.todo.Application"
  }
  archiveClassifier = "all"
  duplicatesStrategy = "warn"
  from {
    configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
  with jar
}

def arch = System.getProperty("os.arch") ?: "amd64"

task downloadGraalvm(type: Download) {
  src "https://github.com/graalvm/graalvm-ce-dev-builds/releases/download/23.0.0-dev-20221011_2158/graalvm-ce-java19-linux-amd64-dev.tar.gz"
  dest new java.io.File(buildDir, "graalvm.tar.gz")
  onlyIfModified true
}

task extractGraalvm(dependsOn: downloadGraalvm, type: Exec) {
  workingDir "$buildDir"
  commandLine 'tar', 'zxvf', 'graalvm.tar.gz'
}

nativeImage {
  graalVmHome = "${buildDir}/graalvm-ce-java19-23.0.0-dev"
  mainClass = "com.github.tonivade.todo.Application"
  executableName = "todo-backend"
  arguments(
          '--verbose',
          '--report-unsupported-elements-at-runtime',
          '--no-fallback',
          '--enable-preview',
          '--allow-incomplete-classpath',
          '--initialize-at-run-time=com.oracle.truffle.js.scriptengine.GraalJSEngineFactory',
          '-H:IncludeResources=application.toml',
          '-H:ReflectionConfigurationFiles=src/native-image/reflection.json'
  )
}
