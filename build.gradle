apply plugin: 'java-library'
apply plugin: 'application'
apply plugin: 'com.diffplug.eclipse.apt'
apply plugin: 'org.mikeneck.graalvm-native-image'
apply plugin: 'de.undercouch.download'

buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  dependencies {
    classpath 'com.diffplug.gradle:goomph:3.25.0'
    classpath "gradle.plugin.org.mikeneck:graalvm-native-image-plugin:1.3.0"
    classpath 'de.undercouch:gradle-download-task:4.1.1'
  }
}

archivesBaseName = 'todo-backend'
version = '0.1.0-SNAPSHOT'

sourceCompatibility = 17
targetCompatibility = 17

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url = 'https://oss.sonatype.org/content/repositories/snapshots'
  }
}

tasks.withType(JavaCompile) {
  options.fork = true
}

test {
  useJUnitPlatform()
}

javadoc.options {
  addStringOption('-release', '17')
}

dependencies {
  annotationProcessor 'com.github.tonivade:purejson:0.2'
  implementation 'com.github.tonivade:purefun-monad:3.0'
  implementation 'com.github.tonivade:purefun-effect:3.0'
  implementation 'com.github.tonivade:purefun-transformer:3.0'
  runtimeOnly 'com.github.tonivade:purefun-instances:3.0'
  implementation 'com.github.tonivade:zeromock-server:0.15.0'
  implementation 'com.github.tonivade:puredbc:0.3'
  implementation 'com.github.tonivade:purecfg:0.3'
  implementation 'com.github.tonivade:purejson:0.2'
  implementation 'com.zaxxer:HikariCP:4.0.3'
  implementation 'org.flywaydb:flyway-core:5.2.4'
  runtimeOnly 'com.h2database:h2:1.4.200'
  runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'
  testImplementation 'com.github.tonivade:zeromock-junit5:0.15.0'
  testImplementation 'com.github.tonivade:zeromock-client:0.15.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
  testRuntimeOnly 'org.junit.platform:junit-platform-runner:1.7.1'
  testImplementation 'org.mockito:mockito-core:3.9.0'
  testImplementation 'org.mockito:mockito-junit-jupiter:3.9.0'
}

application {
  mainClassName = 'com.github.tonivade.todo.Application'
}

task fatJar(type: Jar) {
  manifest {
    attributes "Main-Class": "com.github.tonivade.todo.Application"
  }
  archiveClassifier = "all"
  duplicatesStrategy = "warn"
  from {
    configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
  with jar
}

task downloadGraalvm(type: Download) {
  src "https://github.com/graalvm/graalvm-ce-dev-builds/releases/download/21.3.0-dev-20210806_1944/graalvm-ce-java16-linux-amd64-dev.tar.gz"
  dest new java.io.File(buildDir, "graalvm.tar.gz")
  onlyIfModified true
}

task extractGraalvm(dependsOn: downloadGraalvm, type: Exec) {
  workingDir "$buildDir"
  commandLine 'tar', 'zxvf', 'graalvm.tar.gz'
}

nativeImage {
  graalVmHome = "${buildDir}/graalvm-ce-java16-21.3.0-dev"
  mainClass = "com.github.tonivade.todo.Application"
  executableName = "todo-backend"
  arguments(
          '--verbose',
          '--report-unsupported-elements-at-runtime',
          '--initialize-at-build-time',
          '--no-fallback',
          '--allow-incomplete-classpath',
          '-H:IncludeResources=application.toml',
          '-H:ReflectionConfigurationFiles=src/native-image/reflection.json'
  )
}
